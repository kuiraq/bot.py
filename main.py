import time
import random
import telebot
from telebot import types
points = 0
crct = ['–í–µ—Ä–Ω–æ!', '–ú–æ–ª–æ–¥–µ—Ü, –ø—Ä–∞–≤–∏–ª—å–Ω–æ', '–û—Ç–≤–µ—Ç –≤–µ—Ä–µ–Ω!', '–ü—Ä–∞–≤–∏–ª—å–Ω–æ, —Ç–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!']
incrct = ['–ù–µ–≤–µ—Ä–Ω–æ :(', '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–æ–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ!', '–û—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–µ–Ω, –Ω–æ –Ω–∏—á–µ–≥–æ', '–≠—Ö, –Ω–µ–≤–µ—Ä–Ω–æ...']
pred = ['knife - –Ω–æ–∂', 'toiletries ‚Äî —Ç—É–∞–ª–µ—Ç–Ω—ã–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏', 'wardrobe ‚Äî —à–∫–∞—Ñ –¥–ª—è –æ–¥–µ–∂–¥—ã',
        'cupboard ‚Äî —à–∫–∞—Ñ, –±—É—Ñ–µ—Ç', 'closet ‚Äî —à–∫–∞—Ñ, –∫–ª–∞–¥–æ–≤–∫–∞, —á—É–ª–∞–Ω',
        'cup ‚Äì —á–∞—à–∫–∞', 'fork ‚Äì –≤–∏–ª–∫–∞', 'spoon ‚Äì –ª–æ–∂–∫–∞', 'plate ‚Äì —Ç–∞—Ä–µ–ª–∫–∞', 'blanket ‚Äì –æ–¥–µ—è–ª–æ', 'pillow ‚Äì –ø–æ–¥—É—à–∫–∞',
        'pillowcase ‚Äì –Ω–∞–≤–æ–ª–æ—á–∫–∞',
        'sheet (bedsheet) ‚Äì –ø—Ä–æ—Å—Ç—ã–Ω—è', 'linens ‚Äî –ø–æ—Å—Ç–µ–ª—å–Ω–æ–µ –±–µ–ª—å–µ',
        'Bathroom ‚Äî —ç—Ç–æ —Å–∞–Ω—É–∑–µ–ª –¥–æ–º–∞, —Ç–æ –µ—Å—Ç—å –∫–æ–º–Ω–∞—Ç–∞, –≥–¥–µ —Å–æ–≤–º–µ—â–µ–Ω—ã –≤–∞–Ω–Ω–∞—è (bathtub) –∏ —Ç—É–∞–ª–µ—Ç. –ù–∞—Ö–æ–¥—è—Å—å –¥–æ–º–∞, –ª—é–¥–∏ '
        '–æ–±—ã—á–Ω–æ –≥–æ–≤–æ—Ä—è—Ç ¬´bathroom¬ª, –∞ –Ω–µ –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã. –¢–∞–∫–∂–µ, –µ—Å–ª–∏ –≤ –¥–æ–º–µ –≤–∞–Ω–Ω–∞—è –∏ —Ç—É–∞–ª–µ—Ç —Ä–∞–∑–¥–µ–ª—å–Ω—ã–µ, '
        '—Ç–æ bathroom ‚Äî —ç—Ç–æ –≤–∞–Ω–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞. '
        '\nToilet ‚Äî 1) —Ç—É–∞–ª–µ—Ç –≤ –¥–æ–º–µ –∏–ª–∏ –∫–≤–∞—Ä—Ç–∏—Ä–µ —Å —Ä–∞–∑–¥–µ–ª—å–Ω—ã–º–∏ –≤–∞–Ω–Ω–æ–π (bathroom) –∏ —Ç—É–∞–ª–µ—Ç–æ–º (toilet), 2) —É–Ω–∏—Ç–∞–∑.'
        '\nRestroom ‚Äî –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—É–∞–ª–µ—Ç. –ù–∞—Ö–æ–¥—è—Å—å –≤ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–º –º–µ—Å—Ç–µ, –æ–±—ã—á–Ω–æ –≥–æ–≤–æ—Ä—è—Ç '
        '¬´I need to go to the restroom¬ª, –∞ –Ω–µ ¬´bathroom¬ª. '
        '\nLavatory ‚Äî –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—É–∞–ª–µ—Ç, –æ—Å–æ–±–µ–Ω–Ω–æ –Ω–∞ —Å–∞–º–æ–ª–µ—Ç–µ.']


bot = telebot.TeleBot('5683702517:AAFWKHLswuuyUkgzjQhtwJZmH35_6QSwpEQ')


@bot.message_handler(commands=['start'])
def start(message):
    mess = f'–ü—Ä–∏–≤–µ—Ç, <i><b>{message.from_user.first_name}</b></i>! –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å –∏–∑—É—á–∞—Ç—å ' \
           f'–∞–Ω–≥–ª–∏–π—Å–∫–∏–π'
    mess1 = f'–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –Ω–µ–±–æ–ª—å—à–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ'
    mess2 = f'–î–∞–Ω–Ω—ã–π –±–æ—Ç –Ω–∞—Ü–µ–ª–µ–Ω –Ω–∞ –∞—É–¥–∏—Ç–æ—Ä–∏—é —à–∫–æ–ª—å–Ω–∏–∫–æ–≤, –±—É–¥–µ–º —Ä–∞–¥—ã –ø–æ–º–æ—á—å'
    mess3 = f'–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞'
    bot.reply_to(message, mess, parse_mode='html')
    bot.send_message(message.chat.id, mess1)
    bot.send_message(message.chat.id, mess2)
    bot.send_message(message.chat.id, mess3)


@bot.message_handler(commands=['help'])
def help(message):
    mes = f'/start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞'
    mes1 = f'/study - –õ–∞–π—Ñ—Ö–∞–∫–∏, –ø—Ä–∞–≤–∏–ª–∞ –ø–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º—É'
    mes2 = '/minigames - –ú–∏–Ω–∏-–∏–≥—Ä—ã'
    bot.send_message(message.chat.id, mes)
    bot.send_message(message.chat.id, mes1)
    bot.send_message(message.chat.id, mes2)


@bot.message_handler(commands=['minigames'])
def minigames(message):
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
    ret_btn = types.KeyboardButton('–í –Ω–∞—á–∞–ª–æ ‚Ü©')
    quiz1 = types.KeyboardButton('–í–∏–∫—Ç–æ—Ä–∏–Ω–∞')
    markup_reply.add(quiz1)
    markup_reply.add(ret_btn)
    bot.send_message(message.chat.id, "–í —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª–µ —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–µ–±—è —Å –ø–æ–º–æ—â—å—é –≤–∏–∫—Ç–æ—Ä–∏–Ω –∏ –Ω–µ–±–æ–ª—å—à–∏—Ö –∏–≥—Ä. "
                                      "–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –æ–Ω–∏ –±—É–¥—É—Ç –ø–æ–ø–æ–ª–Ω—è—Ç—å—Å—è üòã", reply_markup=markup_reply)


@bot.message_handler(func=lambda message: message.text == '–í–∏–∫—Ç–æ—Ä–∏–Ω–∞')
def quiz(message):
    global points
    points = 0
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton('is, a')
    answ2 = types.KeyboardButton('are, an')
    answ3 = types.KeyboardButton('is, an')
    answ4 = types.KeyboardButton('are, a')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>1) –í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:</b>"
                                      "\nWhat a wonderful day! Look, there <i>is/are</i> so many birds outside. "
                                      "I want to go to <i>a/an</i> park today.", reply_markup=markup_reply,
                     parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'is, a')
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton('out')
    answ2 = types.KeyboardButton('on')
    answ3 = types.KeyboardButton('off')
    answ4 = types.KeyboardButton('in')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>2) –í—Å—Ç–∞–≤—å—Ç–µ –≤–µ—Ä–Ω–æ–µ —Å–ª–æ–≤–æ:</b>"
                                      "\nHi, Jack! Do you want to hang _ with me tonight?", reply_markup=markup_reply,
                     parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'are, an')
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton('out')
    answ2 = types.KeyboardButton('on')
    answ3 = types.KeyboardButton('off')
    answ4 = types.KeyboardButton('in')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>2) –í—Å—Ç–∞–≤—å—Ç–µ –≤–µ—Ä–Ω–æ–µ —Å–ª–æ–≤–æ:</b>"
                                      "\nHi, Jack! Do you want to hang _ with me tonight?", reply_markup=markup_reply,
                     parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'is, an')
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton('out')
    answ2 = types.KeyboardButton('on')
    answ3 = types.KeyboardButton('off')
    answ4 = types.KeyboardButton('in')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>2) –í—Å—Ç–∞–≤—å—Ç–µ –≤–µ—Ä–Ω–æ–µ —Å–ª–æ–≤–æ:</b>"
                                      "\nHi, Jack! Do you want to hang _ with me tonight?", reply_markup=markup_reply,
                     parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'are, a')
def answer(message):
    global points
    bot.send_message(message.chat.id, random.choice(crct))
    points += 1
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton('out')
    answ2 = types.KeyboardButton('on')
    answ3 = types.KeyboardButton('off')
    answ4 = types.KeyboardButton('in')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>2) –í—Å—Ç–∞–≤—å—Ç–µ –≤–µ—Ä–Ω–æ–µ —Å–ª–æ–≤–æ:</b>"
                                      "\nHi, Jack! Do you want to hang _ with me tonight?", reply_markup=markup_reply,
                     parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'out')
def answer(message):
    global points
    bot.send_message(message.chat.id, random.choice(crct))
    points += 1
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton('have done')
    answ2 = types.KeyboardButton('has did')
    answ3 = types.KeyboardButton('had done')
    answ4 = types.KeyboardButton('had did')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>3) –í—Å—Ç–∞–≤—å—Ç–µ –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è:</b>"
                                      "\nI _ _ my work when he came", reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'on')
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton('have done')
    answ2 = types.KeyboardButton('has did')
    answ3 = types.KeyboardButton('had done')
    answ4 = types.KeyboardButton('had did')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>3) –í—Å—Ç–∞–≤—å—Ç–µ –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è:</b>"
                                      "\nI _ _ my work when he came", reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'off')
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton('have done')
    answ2 = types.KeyboardButton('has did')
    answ3 = types.KeyboardButton('had done')
    answ4 = types.KeyboardButton('had did')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>3) –í—Å—Ç–∞–≤—å—Ç–µ –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è:</b>"
                                      "\nI _ _ my work when he came", reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'in')
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton('have done')
    answ2 = types.KeyboardButton('has did')
    answ3 = types.KeyboardButton('had done')
    answ4 = types.KeyboardButton('had did')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>3) –í—Å—Ç–∞–≤—å—Ç–µ –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è:</b>"
                                      "\nI _ _ my work when he came", reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'have done')
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton('3')
    answ2 = types.KeyboardButton('24')
    answ3 = types.KeyboardButton('12')
    answ4 = types.KeyboardButton('16')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>4) –û—Ç–≤–µ—Ç—å—Ç–µ:</b>"
                                      "\n–°–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –≤—Ä–µ–º—ë–Ω –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ (<i>–ø–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π –≥—Ä–∞–º–º–∞—Ç–∏–∫–µ</i>)",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'has did')
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton('3')
    answ2 = types.KeyboardButton('24')
    answ3 = types.KeyboardButton('12')
    answ4 = types.KeyboardButton('16')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>4) –û—Ç–≤–µ—Ç—å—Ç–µ:</b>"
                                      "\n–°–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –≤—Ä–µ–º—ë–Ω –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ (<i>–ø–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π –≥—Ä–∞–º–º–∞—Ç–∏–∫–µ</i>)",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'had done')
def answer(message):
    global points
    bot.send_message(message.chat.id, random.choice(crct))
    points += 1
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton('3')
    answ2 = types.KeyboardButton('24')
    answ3 = types.KeyboardButton('12')
    answ4 = types.KeyboardButton('16')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>4) –û—Ç–≤–µ—Ç—å—Ç–µ:</b>"
                                      "\n–°–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –≤—Ä–µ–º—ë–Ω –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ (<i>–ø–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π –≥—Ä–∞–º–º–∞—Ç–∏–∫–µ</i>)",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'had did')
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton('3')
    answ2 = types.KeyboardButton('24')
    answ3 = types.KeyboardButton('12')
    answ4 = types.KeyboardButton('16')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>4) –û—Ç–≤–µ—Ç—å—Ç–µ:</b>"
                                      "\n–°–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –≤—Ä–µ–º—ë–Ω –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ (<i>–ø–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π –≥—Ä–∞–º–º–∞—Ç–∏–∫–µ</i>)",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == '3')
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton('Women, Cats, Oxes')
    answ2 = types.KeyboardButton('Women, Cats, Oxen')
    answ3 = types.KeyboardButton('Womans, Cats, Oxes')
    answ4 = types.KeyboardButton('Womans, Cats, Oxen')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>5) –û–±—Ä–∞–∑—É–π—Ç–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞:</b>"
                                      "\nWoman - ..., Cat - ..., Ox - ... ",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == '24')
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton('Women, Cats, Oxes')
    answ2 = types.KeyboardButton('Women, Cats, Oxen')
    answ3 = types.KeyboardButton('Womans, Cats, Oxes')
    answ4 = types.KeyboardButton('Womans, Cats, Oxen')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>5) –û–±—Ä–∞–∑—É–π—Ç–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞:</b>"
                                      "\nWoman - ..., Cat - ..., Ox - ... ",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == '12')
def answer(message):
    global points
    bot.send_message(message.chat.id, random.choice(crct))
    points += 1
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton('Women, Cats, Oxes')
    answ2 = types.KeyboardButton('Women, Cats, Oxen')
    answ3 = types.KeyboardButton('Womans, Cats, Oxes')
    answ4 = types.KeyboardButton('Womans, Cats, Oxen')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>5) –û–±—Ä–∞–∑—É–π—Ç–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞:</b>"
                                      "\nWoman - ..., Cat - ..., Ox - ... ",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == '16')
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton('Women, Cats, Oxes')
    answ2 = types.KeyboardButton('Women, Cats, Oxen')
    answ3 = types.KeyboardButton('Womans, Cats, Oxes')
    answ4 = types.KeyboardButton('Womans, Cats, Oxen')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>5) –û–±—Ä–∞–∑—É–π—Ç–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞:</b>"
                                      "\nWoman - ..., Cat - ..., Ox - ... ",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'Women, Cats, Oxes')
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton("at 4 o'clock yesterday, the whole day, from 5 till 6")
    answ2 = types.KeyboardButton("by that time, by 5 o'clock, before + Past Simple")
    answ3 = types.KeyboardButton('yesterday, a week ago, last night')
    answ4 = types.KeyboardButton('already, never, ever, just')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>6) –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –º–∞—Ä–∫–µ—Ä—ã –≤—Ä–µ–º–µ–Ω–∏ <u>Past Simple</u>:</b>",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'Women, Cats, Oxen')
def answer(message):
    global points
    bot.send_message(message.chat.id, random.choice(crct))
    points += 1
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton("at 4 o'clock yesterday, the whole day, from 5 till 6")
    answ2 = types.KeyboardButton("by that time, by 5 o'clock, before + Past Simple")
    answ3 = types.KeyboardButton('yesterday, a week ago, last night')
    answ4 = types.KeyboardButton('already, never, ever, just')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>6) –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –º–∞—Ä–∫–µ—Ä—ã –≤—Ä–µ–º–µ–Ω–∏ <u>Past Simple</u>:</b>",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'Womans, Cats, Oxes')
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton("at 4 o'clock yesterday, the whole day, from 5 till 6")
    answ2 = types.KeyboardButton("by that time, by 5 o'clock, before + Past Simple")
    answ3 = types.KeyboardButton('yesterday, a week ago, last night')
    answ4 = types.KeyboardButton('already, never, ever, just')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>6) –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –º–∞—Ä–∫–µ—Ä—ã –≤—Ä–µ–º–µ–Ω–∏ <u>Past Simple</u>:</b>",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'Womans, Cats, Oxen')
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton("at 4 o'clock yesterday, the whole day, from 5 till 6")
    answ2 = types.KeyboardButton("by that time, by 5 o'clock, before + Past Simple")
    answ3 = types.KeyboardButton('yesterday, a week ago, last night')
    answ4 = types.KeyboardButton('already, never, ever, just')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>6) –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –º–∞—Ä–∫–µ—Ä—ã –≤—Ä–µ–º–µ–Ω–∏ <u>Past Simple</u>:</b>",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == "at 4 o'clock yesterday, the whole day, from 5 till 6")
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton("will be do")
    answ2 = types.KeyboardButton("have been doing")
    answ3 = types.KeyboardButton('was been doing')
    answ4 = types.KeyboardButton('will be doing')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>7) –û–±—Ä–∞–∑—É–π—Ç–µ –≤—Ä–µ–º—è:</b>"
                                      "\nI was doing my makeup at 5 o'clock yesterday. - I _ _ _ my makeup at "
                                      "5 o'clock tomorrow.",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == "by that time, by 5 o'clock, before + Past Simple")
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton("will be do")
    answ2 = types.KeyboardButton("have been doing")
    answ3 = types.KeyboardButton('was been doing')
    answ4 = types.KeyboardButton('will be doing')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>7) –û–±—Ä–∞–∑—É–π—Ç–µ –≤—Ä–µ–º—è:</b>"
                                      "\nI was doing my makeup at 5 o'clock yesterday. - I _ _ _ my makeup at "
                                      "5 o'clock tomorrow.",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == "yesterday, a week ago, last night")
def answer(message):
    global points
    bot.send_message(message.chat.id, random.choice(crct))
    points += 1
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton("will be do")
    answ2 = types.KeyboardButton("have been doing")
    answ3 = types.KeyboardButton('was been doing')
    answ4 = types.KeyboardButton('will be doing')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>7) –û–±—Ä–∞–∑—É–π—Ç–µ –≤—Ä–µ–º—è:</b>"
                                      "\nI was doing my makeup at 5 o'clock yesterday. - I _ _ _ my makeup at "
                                      "5 o'clock tomorrow.",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == "already, never, ever, just")
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton("will be do")
    answ2 = types.KeyboardButton("have been doing")
    answ3 = types.KeyboardButton('was been doing')
    answ4 = types.KeyboardButton('will be doing')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>7) –û–±—Ä–∞–∑—É–π—Ç–µ –≤—Ä–µ–º—è:</b>"
                                      "\nI was doing my makeup at 5 o'clock yesterday. - I _ _ _ my makeup at "
                                      "5 o'clock tomorrow.",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == "will be do")
def answer(message):
    f = open('time.png', "rb")
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton("quarter past five")
    answ2 = types.KeyboardButton("quarter to five")
    answ3 = types.KeyboardButton('half past four')
    answ4 = types.KeyboardButton('half to five')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_photo(message.chat.id, f)
    bot.send_message(message.chat.id, "<b>8) –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —á–∞—Å–∞—Ö?:</b>"
                                      "\nIt's...",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == "have been doing")
def answer(message):
    f = open('time.png', "rb")
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton("quarter past five")
    answ2 = types.KeyboardButton("quarter to five")
    answ3 = types.KeyboardButton('half past four')
    answ4 = types.KeyboardButton('half to five')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_photo(message.chat.id, f)
    bot.send_message(message.chat.id, "<b>8) –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —á–∞—Å–∞—Ö?:</b>"
                                      "\nIt's...",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == "was been doing")
def answer(message):
    f = open('time.png', "rb")
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton("quarter past five")
    answ2 = types.KeyboardButton("quarter to five")
    answ3 = types.KeyboardButton('half past four')
    answ4 = types.KeyboardButton('half to five')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_photo(message.chat.id, f)
    bot.send_message(message.chat.id, "<b>8) –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —á–∞—Å–∞—Ö?:</b>"
                                      "\nIt's...",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == "will be doing")
def answer(message):
    f = open('time.png', "rb")
    global points
    bot.send_message(message.chat.id, random.choice(crct))
    points += 1
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton("quarter past five")
    answ2 = types.KeyboardButton("quarter to five")
    answ3 = types.KeyboardButton('half past four')
    answ4 = types.KeyboardButton('half to five')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_photo(message.chat.id, f)
    bot.send_message(message.chat.id, "<b>8) –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —á–∞—Å–∞—Ö?:</b>"
                                      "\nIt's...",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == "quarter past five")
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton("–ù–∞–¥–µ—Ç—å")
    answ2 = types.KeyboardButton("–ü–æ–ª–æ–∂–∏—Ç—å")
    answ3 = types.KeyboardButton('–í—Ç—è–Ω—É—Ç—å')
    answ4 = types.KeyboardButton('–°—Ç–∞–≤–∏—Ç—å')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>9) –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É 'put on' –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ:</b>"
                                      "\nDon't <i>put</i> me <i>on</i> this deal",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == "quarter to five")
def answer(message):
    global points
    bot.send_message(message.chat.id, random.choice(crct))
    points += 1
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton("–ù–∞–¥–µ—Ç—å")
    answ2 = types.KeyboardButton("–ü–æ–ª–æ–∂–∏—Ç—å")
    answ3 = types.KeyboardButton('–í—Ç—è–Ω—É—Ç—å')
    answ4 = types.KeyboardButton('–°—Ç–∞–≤–∏—Ç—å')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>9) –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É 'put on' –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ:</b>"
                                      "\nDon't <i>put</i> me <i>on</i> this deal",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == "half past four")
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton("–ù–∞–¥–µ—Ç—å")
    answ2 = types.KeyboardButton("–ü–æ–ª–æ–∂–∏—Ç—å")
    answ3 = types.KeyboardButton('–í—Ç—è–Ω—É—Ç—å')
    answ4 = types.KeyboardButton('–°—Ç–∞–≤–∏—Ç—å')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>9) –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É 'put on' –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ:</b>"
                                      "\nDon't <i>put</i> me <i>on</i> this deal",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == "half to five")
def answer(message):
    bot.send_message(message.chat.id, random.choice(incrct))
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=2)
    answ1 = types.KeyboardButton("–ù–∞–¥–µ—Ç—å")
    answ2 = types.KeyboardButton("–ü–æ–ª–æ–∂–∏—Ç—å")
    answ3 = types.KeyboardButton('–í—Ç—è–Ω—É—Ç—å')
    answ4 = types.KeyboardButton('–°—Ç–∞–≤–∏—Ç—å')
    markup_reply.add(answ1, answ3)
    markup_reply.add(answ2, answ4)
    bot.send_message(message.chat.id, "<b>9) –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É 'put on' –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ:</b>"
                                      "\nDon't <i>put</i> me <i>on</i> this deal",
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == "–ù–∞–¥–µ—Ç—å")
def answer(message):
    pr = round(points * 11.1111)
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
    ret_btn = types.KeyboardButton('–í –Ω–∞—á–∞–ª–æ ‚Ü©')
    markup_reply.add(ret_btn)
    bot.send_message(message.chat.id, random.choice(incrct))
    bot.send_message(message.chat.id, f"<b>–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –æ–∫–æ–Ω—á–µ–Ω–∞:</b>"
                                      f"\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç - {points} ({pr}%)", reply_markup=markup_reply,
                     parse_mode='html')


@bot.message_handler(func=lambda message: message.text == "–ü–æ–ª–æ–∂–∏—Ç—å")
def answer(message):
    pr = round(points * 11.1111)
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
    ret_btn = types.KeyboardButton('–í –Ω–∞—á–∞–ª–æ ‚Ü©')
    markup_reply.add(ret_btn)
    bot.send_message(message.chat.id, random.choice(incrct))
    bot.send_message(message.chat.id, f"<b>–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –æ–∫–æ–Ω—á–µ–Ω–∞:</b>"
                                      f"\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç - {points} ({pr}%)", reply_markup=markup_reply,
                     parse_mode='html')


@bot.message_handler(func=lambda message: message.text == "–í—Ç—è–Ω—É—Ç—å")
def answer(message):
    global points
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
    ret_btn = types.KeyboardButton('–í –Ω–∞—á–∞–ª–æ ‚Ü©')
    markup_reply.add(ret_btn)
    bot.send_message(message.chat.id, random.choice(crct))
    points += 1
    pr = round(points * 11.1111)
    bot.send_message(message.chat.id, f"<b>–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –æ–∫–æ–Ω—á–µ–Ω–∞:</b>"
                                      f"\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç - {points} ({pr}%)", reply_markup=markup_reply,
                     parse_mode='html')


@bot.message_handler(func=lambda message: message.text == "–°—Ç–∞–≤–∏—Ç—å")
def answer(message):
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
    ret_btn = types.KeyboardButton('–í –Ω–∞—á–∞–ª–æ ‚Ü©')
    markup_reply.add(ret_btn)
    pr = round(points * 11.1111)
    bot.send_message(message.chat.id, random.choice(incrct))
    bot.send_message(message.chat.id, f"<b>–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –æ–∫–æ–Ω—á–µ–Ω–∞:</b>"
                                      f"\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç - {points} ({pr}%)", reply_markup=markup_reply,
                     parse_mode='html')


@bot.message_handler(func=lambda message: message.text == '–í –Ω–∞—á–∞–ª–æ ‚Ü©')
def func(message):
    help(message)


@bot.message_handler(commands=['study'])
def study_eng(message):
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
    item_rules = types.KeyboardButton(text='–ü—Ä–∞–≤–∏–ª–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ')
    item_words = types.KeyboardButton(text='–ù–æ–≤—ã–µ —Å–ª–æ–≤–∞')
    ret_btn = types.KeyboardButton('–í –Ω–∞—á–∞–ª–æ ‚Ü©')
    markup_reply.add(item_rules, item_words, ret_btn)
    bot.send_message(message.chat.id, '–î–∞–≤–∞–π –Ω–∞—á–Ω—ë–º!', reply_markup=markup_reply)


@bot.message_handler(func=lambda message: message.text == '–ü—Ä–∞–≤–∏–ª–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ')
def eng_rules(message):
    markup_reply = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True, row_width=1)
    item_tenses = types.KeyboardButton('–ü–∞–º—è—Ç–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∞–º')
    item_gramm = types.KeyboardButton('–í–∞–∂–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏')
    ret_back = types.KeyboardButton('–ù–∞–∑–∞–¥ ‚Ü©')
    markup_reply.row(item_tenses, item_gramm)
    markup_reply.add(ret_back)
    bot.send_message(message.chat.id, '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑—É—á–∏—Ç—å?', reply_markup=markup_reply)


@bot.message_handler(func=lambda message: message.text == '–ù–∞–∑–∞–¥ ‚Ü©')
def func(message):
    study_eng(message)


@bot.message_handler(func=lambda message: message.text == '–ü–∞–º—è—Ç–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∞–º')
def tenses(message):
    markup_reply = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    item_tenses1 = types.KeyboardButton('Present')
    item_tenses2 = types.KeyboardButton('Past')
    item_tenses3 = types.KeyboardButton('Future')
    ret_back = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ ‚Ü©')
    markup_reply.row(item_tenses1, item_tenses2, item_tenses3)
    markup_reply.row(ret_back)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –≤—Ä–µ–º—ë–Ω', reply_markup=markup_reply)


@bot.message_handler(func=lambda message: message.text == 'Present')
def present(message):
    with open('863d0921cde74032d3660204f46c9b46.jpg', 'rb') as file:
        bot.send_photo(message.chat.id, file)
        bot.send_message(message.chat.id, '<b>Present Simple</b> - –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ, –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è'
                                          '\n–ú–∞—Ä–∫–µ—Ä—ã - always, often, usually, never, every day, etc.',
                         parse_mode='html')
        bot.send_message(message.chat.id, '<b>Present Continious</b> - –¥–µ–π—Å—Ç–≤–∏–µ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç, —Å–µ–π—á–∞—Å'
                                          '\n–ò–ª–∏, –µ—Å–ª–∏ —Ä–µ—á—å –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ (–ø–æ–µ–∑–¥–∞, –≤—Å—Ç—Ä–µ—á–∞ —Å–µ–≥–æ–¥–Ω—è)'
                                          '\n–ú–∞—Ä–∫–µ—Ä—ã - now, at the moment, today, etc.', parse_mode='html')
        bot.send_message(message.chat.id,
                         '<b>Present Perfect</b> - –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ –≤ –ø—Ä–æ—à–ª–æ–º, –Ω–æ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º'
                         '\n–ú–∞—Ä–∫–µ—Ä—ã - already, never, ever, just, yet, etc.', parse_mode='html')
        bot.send_message(message.chat.id,
                         '<b>Present Perfect Continious</b> - –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–æ –≤ —Ç–µ—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ –ø—Ä–æ—à–ª–æ–º, '
                         '–Ω–æ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º '
                         '\n–ú–∞—Ä–∫–µ—Ä—ã - since, for', parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'Past')
def past(message):
    with open('58bc9a165abfe2c037fe198ecf035694.jpg', 'rb') as file1:
        bot.send_photo(message.chat.id, file1)
        bot.send_message(message.chat.id, "<b>Past Simple</b> - –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ –∫–æ–≥–¥–∞-—Ç–æ –≤ –ø—Ä–æ—à–ª–æ–º"
                                          "\n–ú–∞—Ä–∫–µ—Ä—ã - yesterday, a week ago, last night, the day before yesterday, "
                                          "etc.",
                         parse_mode='html')
        bot.send_message(message.chat.id, "<b>Past Continious</b> - –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–æ –≤ —Ç–µ—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ –ø—Ä–æ—à–ª–æ–º"
                                          "\n–ú–∞—Ä–∫–µ—Ä—ã - at 4 o'clock yesterday, the whole day, from 5 till 6, "
                                          "when + Past Simple, while, etc.",
                         parse_mode='html')
        bot.send_message(message.chat.id,
                         "<b>Past Perfect</b> - –¥–µ–π—Å—Ç–≤–∏–µ —Å–ª—É—á–∏–ª–æ—Å—å –¥–æ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –∫–∞–∫–æ–≥–æ-—Ç–æ –º–æ–º–µ–Ω—Ç–∞ –≤ –ø—Ä–æ—à–ª–æ–º"
                         "\n–ú–∞—Ä–∫–µ—Ä—ã - by that time, by 5 o'clock, before + Past Simple, after, etc.", parse_mode='html')
        bot.send_message(message.chat.id,
                         "<b>Past Perfect Continious</b> - –¥–µ–π—Å—Ç–≤–∏–µ —Å–ª—É—á–∞–ª–æ—Å—å –∫–∞–∫–æ–µ-—Ç–æ –≤—Ä–µ–º—è –¥–æ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ "
                         "–∫–∞–∫–æ–≥–æ-—Ç–æ –º–æ–º–µ–Ω—Ç–∞ –≤ –ø—Ä–æ—à–ª–æ–º"
                         "\n–ú–∞—Ä–∫–µ—Ä—ã - since, for a month, a long time, etc.", parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'Future')
def future(message):
    with open('6b295b7916a8165c928ffb69ef00be0c.jpg', 'rb') as file2:
        bot.send_photo(message.chat.id, file2)
        bot.send_message(message.chat.id, '<b>Future Simple</b> - –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –≤ –±—É–¥—É—â–µ–º '
                                          '\n–ú–∞—Ä–∫–µ—Ä—ã - tomorrow, in the future, soon, next weekend, etc.',
                         parse_mode='html')
        bot.send_message(message.chat.id,
                         '<b>Future Continious</b> - –¥–µ–π—Å—Ç–≤–∏–µ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ –∫–∞–∫–æ–≥–æ-—Ç–æ –≤—Ä–µ–º–µ–Ω–∏'
                         '\n–ú–∞—Ä–∫–µ—Ä—ã - all the morning, from 4 till 7, for a week, etc.', parse_mode='html')
        bot.send_message(message.chat.id, "<b>Future Perfect</b> - –¥–µ–π—Å—Ç–≤–∏–µ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –∫ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É –º–æ–º–µ–Ω—Ç—É"
                                          "\n–ú–∞—Ä–∫–µ—Ä—ã - by the time, by 5 o'clock, before, untill/till, etc."
                                          "\n<i>*–ß–∞—Å—Ç–æ –ø–æ—Å–ª–µ Future Perfect –∏–¥—ë—Ç <b>Present simple</b> "
                                          "–∫–∞–∫ –º–æ–º–µ–Ω—Ç, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –¥–µ–π—Å—Ç–≤–∏–µ.</i>",
                         parse_mode='html')
        bot.send_message(message.chat.id,
                         "<b>Future Perfect Continious</b> - –¥–µ–π—Å—Ç–≤–∏–µ –±—É–¥–µ—Ç –¥–ª–∏—Ç—å—Å—è –∫–∞–∫–æ–µ-—Ç–æ –≤—Ä–µ–º—è –∏ "
                         "–∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –¥–æ –º–æ–º–µ–Ω—Ç–∞ –≤ –±—É–¥—É—â–µ–º"
                         "\n–ú–∞—Ä–∫–µ—Ä—ã - for three years, by the end, etc."
                         "\n<i>*–ß–∞—Å—Ç–æ –ø–æ—Å–ª–µ Future Perfect –∏–¥—ë—Ç <b>Present simple</b> –∫–∞–∫ –º–æ–º–µ–Ω—Ç, –∫ –∫–æ—Ç–æ—Ä–æ–º—É "
                         "–∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –¥–µ–π—Å—Ç–≤–∏–µ.</i>",
                         parse_mode='html')


@bot.message_handler(func=lambda message: message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ ‚Ü©')
def func(message):
    eng_rules(message)


@bot.message_handler(func=lambda message: message.text == '–í–∞–∂–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏')
def gramm(message):
    markup_reply = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    ret_back = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ ‚Ü©')
    passvoice_btn = types.KeyboardButton('Passive voice (–ü–∞—Å—Å–∏–≤. –∑–∞–ª–æ–≥)')
    there_btn = types.KeyboardButton('There is/There are')
    art_btn = types.KeyboardButton('Articles')
    part_btn = types.KeyboardButton('–ü—Ä–µ–¥–ª–æ–≥–∏')
    repsp_btn = types.KeyboardButton('Reported speech (–ö–æ—Å–≤. —Ä–µ—á—å)')
    complx_btn = types.KeyboardButton('Complex object (–°–ª–æ–∂–Ω. –¥–æ–ø–æ–ª–Ω.)')
    stsrav_btn = types.KeyboardButton('–°—Ç–µ–ø–µ–Ω–∏ —Å—Ä–∞–≤–Ω. –ø—Ä–∏–ª–∞–≥–∞—Ç.')
    plur_btn = types.KeyboardButton('Plural (–ú–Ω–æ–∂-–µ —á–∏—Å–ª–æ)')
    ger_btn = types.KeyboardButton('Gerund (–ì–µ—Ä—É–Ω–¥–∏–π)')
    begointo_btn = types.KeyboardButton('Be going to')
    usedto_btn = types.KeyboardButton('Used to')
    markup_reply.row(passvoice_btn, repsp_btn, there_btn)
    markup_reply.row(complx_btn, stsrav_btn)
    markup_reply.row(ret_back)
    markup_reply.row(part_btn, ger_btn, plur_btn)
    markup_reply.row(art_btn, begointo_btn, usedto_btn)
    bot.send_message(message.chat.id, '–í –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑—É—á–∞—Ç—å –Ω–µ–±–æ–ª—å—à—É—é —Ç–µ–æ—Ä–∏—é –ø–æ –≤–∞–∂–Ω—ã–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤'
                                      '–∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ, –∫–æ—Ç–æ—Ä—ã–µ <i>–Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ</i> –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è.'
                                      '\n–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ª–∏—Å—Ç–∞—Ç—å –≤–Ω–∏–∑, –µ—Å–ª–∏ –≤–∏–¥–Ω—ã –Ω–µ –≤—Å–µ –∫–Ω–æ–ø–∫–∏',
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'Passive voice (–ü–∞—Å—Å–∏–≤. –∑–∞–ª–æ–≥)')
def passive_voice(message):
    f = open('passive_voice.png', 'rb')
    f1 = open('passive_voice2.png', 'rb')
    bot.send_message(message.chat.id, '–í –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–≤–∞ –∑–∞–ª–æ–≥–∞ ‚Äî –∞–∫—Ç–∏–≤–Ω—ã–π (active voice) –∏ –ø–∞—Å—Å–∏–≤–Ω—ã–π'
                                      ' –∏–ª–∏ —Å—Ç—Ä–∞–¥–∞—Ç–µ–ª—å–Ω—ã–π (passive voice). –í –∞–∫—Ç–∏–≤–Ω–æ–º –∑–∞–ª–æ–≥–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç '
                                      '–ø–æ–¥–ª–µ–∂–∞—â–µ–µ. –í –ø–∞—Å—Å–∏–≤–Ω–æ–º –∑–∞–ª–æ–≥–µ –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞–¥ –ø–æ–¥–ª–µ–∂–∞—â–∏–º.')
    bot.send_photo(message.chat.id, f)
    bot.send_photo(message.chat.id, f1)
    bot.send_message(message.chat.id, "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã - —á–∞—Å—Ç–∏—Ü–∞ 'not'. –°—Ç–∞–≤–∏—Ç—Å—è –ø–æ—Å–ª–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ"
                                      " –≥–ª–∞–≥–æ–ª–∞. –ï—Å–ª–∏ –∏—Ö –Ω–µ—Å–∫–æ–ª—å–∫–æ, —Ç–æ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ "
                                      "\n(I left my camera on the bench and it was not stolen! ‚Äî –Ø –∑–∞–±—ã–ª –∫–∞–º–µ—Ä—É –Ω–∞ "
                                      "–ª–∞–≤–æ—á–∫–µ, –∏ –µ–µ –Ω–µ —É–∫—Ä–∞–ª–∏!)")
    bot.send_message(message.chat.id, "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞ - –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –≥–ª–∞–≥–æ–ª –Ω–∞ –ø–µ—Ä–≤–æ–º –º–µ—Å—Ç–µ. "
                                      "–ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —É–∫–∞–∑–∞—Ç—å, –∫–µ–º –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–µ–π—Å—Ç–≤–∏–µ, –≤ –∫–æ–Ω—Ü–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è "
                                      "—Å—Ç–∞–≤–∏–º –ø—Ä–µ–¥–ª–æ–≥ by + —Ç–æ–≥–æ, –∫—Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ. "
                                      "(The book was written by an unknown author. ‚Äî –ö–Ω–∏–≥–∞ –±—ã–ª–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º "
                                      "–∞–≤—Ç–æ—Ä–æ–º.)")
    bot.send_message(message.chat.id, "–°–ª—É—á–∞–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: "
                                      "\n1. –ö–æ–≥–¥–∞ —Ç–æ—Ç, –∫—Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ, –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω, –Ω–µ–≤–∞–∂–µ–Ω –∏–ª–∏ –æ—á–µ–≤–∏–¥–µ–Ω. "
                                      "–î–µ–π—Å—Ç–≤–∏–µ –≤–∞–∂–Ω–µ–µ —Ç–æ–≥–æ, –∫—Ç–æ –µ–≥–æ —Å–æ–≤–µ—Ä—à–∞–µ—Ç."
                                      "\n2. –ö–æ–≥–¥–∞ –æ–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –Ω–æ–≤–æ—Å—Ç—è—Ö, –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö, —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏—è—Ö "
                                      "(The local shop was robbed this morning. ‚Äî –ú–µ—Å—Ç–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω –æ–≥—Ä–∞–±–∏–ª–∏ —ç—Ç–∏–º —É—Ç—Ä–æ–º.)"
                                      "\n3. –ö–æ–≥–¥–∞ –æ–ø–∏—Å—ã–≤–∞–µ–º –æ–±—â–∏–µ —Ñ–∞–∫—Ç—ã, –∏–¥–µ–∏, –º–Ω–µ–Ω–∏—è. "
                                      "(Quentin Tarantino is known all around the world. ‚Äî –ö–≤–µ–Ω—Ç–∏–Ω–∞ –¢–∞—Ä–∞–Ω—Ç–∏–Ω–æ –∑–Ω–∞—é—Ç "
                                      "–ø–æ –≤—Å–µ–º—É –º–∏—Ä—É.)"
                                      "\n4. –ö–æ–≥–¥–∞ —Ö–æ—Ç–∏–º —Å–¥–µ–ª–∞—Ç—å –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏–µ –±–æ–ª–µ–µ –≤–µ–∂–ª–∏–≤—ã–º –∏–ª–∏ —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–º. "
                                      "(The electricity hasn‚Äôt been paid for since January. ‚Äî –ó–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ –Ω–µ "
                                      "–ø–ª–∞—Ç—è—Ç —Å —è–Ω–≤–∞—Ä—è.)")
    bot.send_message(message.chat.id, "–ò–Ω—ã–µ —Ñ–æ—Ä–º—ã passive voice:"
                                      "\n1. ing-—Ñ–æ—Ä–º (Nobody likes being treated badly. ‚Äî "
                                      "–ù–∏–∫–æ–º—É –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –∫–æ–≥–¥–∞ —Å –Ω–∏–º –æ–±—Ä–∞—â–∞—é—Ç—Å—è –ø–ª–æ—Ö–æ.)"
                                      "\n2. Modals (This rule must be taken into consideration. ‚Äî "
                                      "–≠—Ç–æ –ø—Ä–∞–≤–∏–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä–∏–Ω—è—Ç–æ –≤–æ –≤–Ω–∏–º–∞–Ω–∏–µ.)"
                                      "\n3. Impersonal construction (It is believed that they are from a "
                                      "very rich family. ‚Äî –°—á–∏—Ç–∞–µ—Ç—Å—è, —á—Ç–æ –æ–Ω–∏ –∏–∑ –æ—á–µ–Ω—å –±–æ–≥–∞—Ç–æ–π —Å–µ–º—å–∏.)"
                                      "\nPersonal construction (They were expected to come on Friday. ‚Äî "
                                      "–û–∂–∏–¥–∞–ª–æ—Å—å, —á—Ç–æ –æ–Ω–∏ –ø—Ä–∏–µ–¥—É—Ç –≤ –ø—è—Ç–Ω–∏—Ü—É.)"
                                      "\n4. Have something done (–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–∞–∫–∏—Ö-–ª–∏–±–æ —É—Å–ª—É–≥)."
                                      "\n–ü–æ–¥–ª–µ–∂–∞—â–µ–µ + have + –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ + –≥–ª–∞–≥–æ–ª –≤ 3-–µ–π —Ñ–æ—Ä–º–µ "
                                      "(I had my nails done yesterday. ‚Äî –ú–Ω–µ —Å–¥–µ–ª–∞–ª–∏ –º–∞–Ω–∏–∫—é—Ä –≤—á–µ—Ä–∞.)")
    bot.send_message(message.chat.id, '<i>(–í–∑—è—Ç–æ —á–∞—Å—Ç–∏—á–Ω–æ —Å englex.ru)</i>', parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'There is/There are')
def there_isare(message):
    f = open('thereisare11.png', 'rb')
    f1 = open('thereisare22.png', 'rb')
    bot.send_message(message.chat.id, "There is –∏ there are –∏—Å–ø–æ–ª—å–∑—É—é—Ç, –∫–æ–≥–¥–∞ —Ö–æ—Ç—è—Ç —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ —á—Ç–æ-—Ç–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç "
                                      "(–Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç) –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è (–Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è) –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –º–µ—Å—Ç–µ.")
    bot.send_message(message.chat.id, "There is - –Ω–∞–ª–∏—á–∏–µ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –º–µ—Å—Ç–µ –∫–∞–∫–æ–≥–æ-—Ç–æ –æ–¥–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ (–ª–∏—Ü–∞). "
                                      "–¢–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –ø–æ–¥–ª–µ–∂–∞—â–∏–º–∏ (–Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∞—Ä—Ç–∏–∫–ª—å "
                                      "(¬´a¬ª, ¬´an¬ª), –∫–æ–≥–¥–∞ –∞—Ä—Ç–∏–∫–ª—è –Ω–µ—Ç, –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–ª–æ–≤–∞ ¬´some¬ª, ¬´any¬ª, ¬´no¬ª), "
                                      "–∏ —Å –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è–º–∏ –∫–∞–∫ ¬´somebody¬ª, ¬´nothing¬ª "
                                      "(There‚Äôs something that makes me feel worried. ‚Äì –ú–µ–Ω—è —á—Ç–æ-—Ç–æ —Ç—Ä–µ–≤–æ–∂–∏—Ç).")
    bot.send_message(message.chat.id,
                     "There are - –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –º–µ—Å—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö (–º–Ω–æ–≥–∏—Ö) –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (–ª–∏—Ü).")
    bot.send_photo(message.chat.id, f)
    bot.send_message(message.chat.id, "–û–±–æ—Ä–æ—Ç there is/are –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–æ –≤—Ä–µ–º–µ–Ω–∞—Ö Perfect. "
                                      "–í –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è—Ö —Ç–∏–ø–∞ there has been —Ä–µ—á—å –∏–¥–µ—Ç –æ –¥–µ–π—Å—Ç–≤–∏–∏, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–≤–µ—Ä—à–∏–ª–æ—Å—å –¥–æ "
                                      "–º–æ–º–µ–Ω—Ç–∞ —Ä–µ—á–∏, –∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏ —ç—Ç–æ–º –∞–∫—Ç—É–∞–ª–µ–Ω –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. ")
    bot.send_photo(message.chat.id, f1)
    bot.send_message(message.chat.id, "<i>(–í–∑—è—Ç–æ —á–∞—Å—Ç–∏—á–Ω–æ —Å englishdom.com, skysmart.ru)</i>", parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'Reported speech (–ö–æ—Å–≤. —Ä–µ—á—å)')
def rep_speech(message):
    f = open('rp1.png', 'rb')
    f1 = open('rp21.png', 'rb')
    f2 = open('rp22.png', 'rb')
    bot.send_message(message.chat.id, "–ü—Ä—è–º–∞—è —Ä–µ—á—å (Direct Speech) ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–±, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏–µ –¥—Ä—É–≥–æ–≥–æ "
                                      "—á–µ–ª–æ–≤–µ–∫–∞ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è —Å–ª–æ–≤–æ –≤ —Å–ª–æ–≤–æ (–≤ –∫–∞–≤—ã—á–∫–∞—Ö), —Ç–æ–≥–¥–∞ –∫–∞–∫ –∫–æ—Å–≤–µ–Ω–Ω–∞—è "
                                      "(Reported Speech) ‚Äî —ç—Ç–æ –ø–µ—Ä–µ—Å–∫–∞–∑ —á—É–∂–∏—Ö —Å–ª–æ–≤ —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º —Å—Ç–∏–ª—è –∏–∑–ª–æ–∂–µ–Ω–∏—è –∏ "
                                      "–∑–∞–º–µ–Ω–æ–π —Å–ª–æ–≤.")
    bot.send_photo(message.chat.id, f1)
    bot.send_photo(message.chat.id, f2)
    bot.send_message(message.chat.id, "Past Simple –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è, –∫–æ–≥–¥–∞ —Å—Ç–æ–∏—Ç –ø–æ—Å–ª–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–æ—é–∑–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä: when, "
                                      "as, while, before, after, since –∏ —Ç. –¥.")
    bot.send_message(message.chat.id, "–ü–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤ –≤ –∫–æ—Å–≤–µ–Ω–Ω–æ–º –≤–æ–ø—Ä–æ—Å–µ —Ç–∞–∫–æ–π –∂–µ, –∫–∞–∫ –∏ –≤ —É—Ç–≤–µ—Ä–¥–∏—Ç–µ–ª—å–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏. "
                                      "–ü—Ä—è–º–æ–π –æ–±—â–∏–π –≤–æ–ø—Ä–æ—Å –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç ¬´–¥–∞¬ª –∏–ª–∏ ¬´–Ω–µ—Ç¬ª, –ø–æ—ç—Ç–æ–º—É –≤ –∫–æ—Å–≤–µ–Ω–Ω–æ–º "
                                      "–≤–æ–ø—Ä–æ—Å–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–∞–∫–∏–µ —Å–ª–æ–≤–∞, –∫–∞–∫ if –∏ whether, –∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–≤–æ–¥—è—Ç—Å—è –Ω–∞ "
                                      "—Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –∫–∞–∫ ¬´–ª–∏¬ª (I asked my friend if she had finished reading my "
                                      "book. ‚Äî –Ø —Å–ø—Ä–æ—Å–∏–ª–∞ —Å–≤–æ—é –ø–æ–¥—Ä—É–≥—É, –¥–æ—á–∏—Ç–∞–ª–∞ –ª–∏ –æ–Ω–∞ –º–æ—é –∫–Ω–∏–≥—É).")
    bot.send_message(message.chat.id, "–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –≤ –ø—Ä—è–º–æ–π —Ä–µ—á–∏ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–ª–æ–≤–∞ "
                                      "(where, what, when –∏ —Ç. –¥.), —Ç–æ –∫–æ—Å–≤–µ–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å —Ç–∞–∫–∂–µ —Å–ª–µ–¥—É–µ—Ç "
                                      "–Ω–∞—á–∏–Ω–∞—Ç—å —Å –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–ª–æ–≤–∞, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—è –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ "
                                      "–≥–ª–∞–≥–æ–ª—ã do/does, did –∏ —Å–æ—Ö—Ä–∞–Ω—è—è –ø—Ä—è–º–æ–π –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤ (He asked me "
                                      "where I lived. ‚Äî –û–Ω —Å–ø—Ä–æ—Å–∏–ª, –≥–¥–µ —è –∂–∏–≤—É).")
    bot.send_message(message.chat.id, "–ü—Ä–∏–∫–∞–∑ –∏–ª–∏ –ø—Ä–æ—Å—å–±–∞ –≤ –∫–æ—Å–≤–µ–Ω–Ω–æ–π —Ä–µ—á–∏ –≤—Å–µ–≥–¥–∞ –≤—ã—Ä–∞–∂–∞—é—Ç—Å—è –∏–Ω—Ñ–∏–Ω–∏—Ç–∏–≤–æ–º "
                                      "(My mom told me to switch on the light. ‚Äî –ú–∞–º–∞ —Å–∫–∞–∑–∞–ª–∞ –º–Ω–µ –≤–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç).")
    bot.send_photo(message.chat.id, f)
    bot.send_message(message.chat.id, "–õ–∏—á–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è I, we –º–µ–Ω—è—é—Ç—Å—è –Ω–∞ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è he, she, they, –∞ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ "
                                      "you –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å—Å—è –Ω–∞ I, we –∏–ª–∏ –∂–µ –Ω–∞ he, she, they."
                                      "\n–ï—Å–ª–∏ –≥–ª–∞–≥–æ–ª –≤ –≥–ª–∞–≤–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ —Å—Ç–æ–∏—Ç –≤ –ø—Ä–æ—à–µ–¥—à–µ–º –≤—Ä–µ–º–µ–Ω–∏ (said, told), —Ç–æ "
                                      "–ø—Ä–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –ø—Ä—è–º–æ–π —Ä–µ—á–∏ –≤ –∫–æ—Å–≤–µ–Ω–Ω—É—é —É–∫–∞–∑–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è –∏ –Ω–∞—Ä–µ—á–∏—è "
                                      "–∑–∞–º–µ–Ω—è—é—Ç—Å—è.")
    bot.send_message(message.chat.id, "<i>(–í–∑—è—Ç–æ —á–∞—Å—Ç–∏—á–Ω–æ —Å englex.ru)</i>", parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'Articles')
def articles(message):
    f = open('art1.png', 'rb')
    f1 = open('art2.png', 'rb')
    f2 = open('art3.png', 'rb')
    f3 = open('art4.png', 'rb')
    f4 = open('art51.png', 'rb')
    f5 = open('art52.png', 'rb')
    bot.send_photo(message.chat.id, f)
    bot.send_photo(message.chat.id, f1)
    bot.send_photo(message.chat.id, f2)
    bot.send_photo(message.chat.id, f3)
    bot.send_photo(message.chat.id, f4)
    bot.send_photo(message.chat.id, f5)
    bot.send_message(message.chat.id, "<i>(–í–∑—è—Ç–æ —á–∞—Å—Ç–∏—á–Ω–æ —Å skyeng.ru)</i>", parse_mode='html')


@bot.message_handler(func=lambda message: message.text == '–ü—Ä–µ–¥–ª–æ–≥–∏')
def preps(message):
    f = open('prep_time.png', 'rb')
    f1 = open('prep_place.png', 'rb')
    f2 = open('prep_drct.png', 'rb')
    f3 = open('prep_rsn.png', 'rb')
    bot.send_photo(message.chat.id, f, "–ü—Ä–µ–¥–ª–æ–≥–∏ –≤—Ä–µ–º–µ–Ω–∏")
    bot.send_photo(message.chat.id, f1, "–ü—Ä–µ–¥–ª–æ–≥–∏ –º–µ—Å—Ç–∞")
    bot.send_photo(message.chat.id, f2, "–ü—Ä–µ–¥–ª–æ–≥–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
    bot.send_photo(message.chat.id, f3, "–ü—Ä–µ–¥–ª–æ–≥–∏ –ø—Ä–∏—á–∏–Ω—ã")
    bot.send_message(message.chat.id, "–ü—Ä–∞–≤–∏–ª–∞ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–µ–¥–ª–æ–≥–∞ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏:"
                                      "\n1. –ü–µ—Ä–µ–¥ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º –∏–ª–∏ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ–º. Put the glass on the table. ‚Äî "
                                      "–ü–æ–ª–æ–∂–∏ —Å—Ç–∞–∫–∞–Ω –Ω–∞ —Å—Ç–æ–ª. Give the book to Tom. ‚Äî –ü–µ—Ä–µ–¥–∞–π —ç—Ç—É –∫–Ω–∏–≥—É –¢–æ–º—É."
                                      "\n2. –í –∫–æ–Ω—Ü–µ –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π. Where do you live in? ‚Äî "
                                      "–ì–¥–µ —Ç—ã –∂–∏–≤–µ—à—å? Who are you waiting for? ‚Äî –ö–æ–≥–æ —Ç—ã –∂–¥–µ—à—å?"
                                      "\n3. –í –∫–æ–Ω—Ü–µ –ø—Ä–∏–¥–∞—Ç–æ—á–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –ø–∞—Å—Å–∏–≤–Ω–æ–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. "
                                      "Apartment repair is what they wanted to begin with. ‚Äî "
                                      "–û–Ω–∏ —Ö–æ—Ç–µ–ª–∏ –±—ã –Ω–∞—á–∞—Ç—å —Å —Ä–µ–º–æ–Ω—Ç–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã. You know who he is worried about. ‚Äî "
                                      "–¢—ã –∑–Ω–∞–µ—à—å, –æ –∫–æ–º –æ–Ω –±–µ—Å–ø–æ–∫–æ–∏—Ç—Å—è.")
    bot.send_message(message.chat.id, "<i>(–í–∑—è—Ç–æ —á–∞—Å—Ç–∏—á–Ω–æ —Å skysmart.ru)</i>", parse_mode='html')


@bot.message_handler(func=lambda message: message.text == 'Plural (–ú–Ω–æ–∂-–µ —á–∏—Å–ª–æ)')
def plural(message):
    f1 = open('pl1.png', 'rb')
    f2 = open('pl2.png', 'rb')
    f3 = open('pl3.png', 'rb')
    f4 = open('pl4.png', 'rb')
    f5 = open('pl41.png', 'rb')
    f6 = open('pl5.png', 'rb')
    f7 = open('pl6.png', 'rb')
    f8 = open('pl7.png', 'rb')
    f9 = open('pl8.png', 'rb')
    bot.send_photo(message.chat.id, f1)
    bot.send_photo(message.chat.id, f2)
    bot.send_photo(message.chat.id, f3)
    bot.send_photo(message.chat.id, f4)
    bot.send_photo(message.chat.id, f5)
    bot.send_photo(message.chat.id, f6)
    bot.send_photo(message.chat.id, f7)
    bot.send_photo(message.chat.id, f8)
    bot.send_photo(message.chat.id, f9)
    bot.send_message(message.chat.id, "<i>(–í–∑—è—Ç–æ —á–∞—Å—Ç–∏—á–Ω–æ —Å skysmart.ru)</i>", parse_mode='html')


@bot.message_handler(func=lambda message: message.text == '–°—Ç–µ–ø–µ–Ω–∏ —Å—Ä–∞–≤–Ω. –ø—Ä–∏–ª–∞–≥–∞—Ç.')
def st_sr(message):
    f1 = open('–°–Ω–∏–º–æ–∫ —ç–∫—Ä–∞–Ω–∞ 2023-02-23 175938.png', 'rb')
    f2 = open('foto-51_51-e1640768483277.jpg', 'rb')
    bot.send_photo(message.chat.id, f1)
    bot.send_photo(message.chat.id, f2)


@bot.message_handler(func=lambda message: message.text == 'Complex object (–°–ª–æ–∂–Ω. –¥–æ–ø–æ–ª–Ω.)')
def complx(message):
    f1 = open('complex-object.jpg', 'rb')
    f2 = open('comp2.png', 'rb')
    bot.send_photo(message.chat.id, f1)
    bot.send_photo(message.chat.id, f2)


@bot.message_handler(func=lambda message: message.text == 'Used to')
def used_to(message):
    f1 = open('AT0gBgN10ik.jpg', 'rb')
    bot.send_photo(message.chat.id, f1)


@bot.message_handler(func=lambda message: message.text == 'Be going to')
def used_to(message):
    f1 = open('bgt1.png', 'rb')
    f2 = open('bgt2.png', 'rb')
    f3 = open('bgt3.png', 'rb')
    f4 = open('bgt4.png', 'rb')
    bot.send_message(message.chat.id, "–≠—Ç—É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤ —Å–ª–µ–¥—É—é—â–∏—Ö —Å–ª—É—á–∞—è—Ö: "
                                      "\n1. –ö–æ–≥–¥–∞ –∑–∞—Ä–∞–Ω–µ–µ –ø–ª–∞–Ω–∏—Ä—É–µ–º —á—Ç–æ-–ª–∏–±–æ —Å–¥–µ–ª–∞—Ç—å. (–æ–Ω–∞ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –∏—Å–ø–µ—á—å —Ç–æ—Ä—Ç; "
                                      "–æ–Ω —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –ø–æ–º—ã—Ç—å –º–∞—à–∏–Ω—É) "
                                      "\n2. –ö–æ–≥–¥–∞ –≥–æ–≤–æ—Ä–∏–º –æ —Ç–æ–º, —á—Ç–æ —á—Ç–æ-—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç —Å –±–æ–ª—å—à–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é –∏ "
                                      "–¥–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å –≤—Å–µ –ø—Ä–∏–∑–Ω–∞–∫–∏. (—Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –¥–æ–∂–¥—å, –ø–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ —ç—Ç–∏ –æ–±–ª–∞–∫–∞)")
    bot.send_message(message.chat.id, "They are going to swim in the pool. –û–Ω–∏ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –ø–æ–ø–ª–∞–≤–∞—Ç—å –≤ –±–∞—Å—Å–µ–π–Ω–µ."
                                      "\n "
                                      "\nShe is going to find a job. –û–Ω–∞ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É. "
                                      "\n"
                                      "\nWe are going to buy a car. –ú—ã —Å–æ–±–∏—Ä–∞–µ–º—Å—è –∫—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É ")
    bot.send_photo(message.chat.id, f1)
    bot.send_photo(message.chat.id, f2)
    bot.send_photo(message.chat.id, f3)
    bot.send_message(message.chat.id, "–≠—Ç–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –ø—Ä–æ—à–µ–¥—à–µ–º –≤—Ä–µ–º–µ–Ω–∏. "
                                      "–ï—ë –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –∫–æ–≥–¥–∞ –º—ã –≥–æ–≤–æ—Ä–∏–º, —á—Ç–æ —Å–æ–±–∏—Ä–∞–ª–∏—Å—å —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞—Ç—å, "
                                      "–Ω–æ —Ç–∞–∫ –∏ –Ω–µ —Å–¥–µ–ª–∞–ª–∏ "
                                      "\n(She was going to go to the party, but her father did not let her go. "
                                      "–û–Ω–∞ —Å–æ–±–∏—Ä–∞–ª–∞—Å—å –∏–¥—Ç–∏ –Ω–∞ –≤–µ—á–µ—Ä–∏–Ω–∫—É, –Ω–æ –µ–µ –æ—Ç–µ—Ü –Ω–µ –ø—É—Å—Ç–∏–ª –µ–µ).")
    bot.send_photo(message.chat.id, f4)


@bot.message_handler(func=lambda message: message.text == 'Gerund (–ì–µ—Ä—É–Ω–¥–∏–π)')
def gerund(message):
    f1 = open('ger1.png', 'rb')
    f2 = open('ger2.png', 'rb')
    bot.send_photo(message.chat.id, f1)
    bot.send_message(message.chat.id, "<b>–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è:</b> "
                                      "\n1. –ì–æ–≤–æ—Ä–∏–º –æ —Ç–æ–º, —á—Ç–æ –Ω—Ä–∞–≤–∏—Ç—Å—è / –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è:"
                                      "\nto fancy, to feel like ‚Äî —Ö–æ—Ç–µ—Ç—å"
                                      "\nto enjoy ‚Äî –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è"
                                      "\nto (not) mind ‚Äî (–Ω–µ) –≤–æ–∑—Ä–∞–∂–∞—Ç—å"
                                      "\nto dislike ‚Äî –Ω–µ –ª—é–±–∏—Ç—å"
                                      "\ncan‚Äôt stand ‚Äî –Ω–µ –≤—ã–Ω–æ—Å–∏—Ç—å", parse_mode='html')
    bot.send_message(message.chat.id, "\n2. –ö–æ–≥–¥–∞ –≤—ã—Ä–∞–∂–∞–µ–º –º–Ω–µ–Ω–∏–µ, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏–¥–µ–∏:"
                                      "\nto admit ‚Äî –ø—Ä–∏–∑–Ω–∞–≤–∞—Ç—å"
                                      "\nto deny ‚Äî –æ—Ç—Ä–∏—Ü–∞—Ç—å"
                                      "\nto consider ‚Äî –æ–±–¥—É–º—ã–≤–∞—Ç—å"
                                      "\nto imagine ‚Äî –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å"
                                      "\nto suggest ‚Äî –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å")
    bot.send_message(message.chat.id, "\n3. –ì–æ–≤–æ—Ä–∏–º –æ –¥–µ–π—Å—Ç–≤–∏–∏, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è, –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –∏–ª–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è:"
                                      "\nto commence ‚Äî –Ω–∞—á–∏–Ω–∞—Ç—å"
                                      "\nto keep (on) ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å"
                                      "\nto give up ‚Äî —Å–¥–∞–≤–∞—Ç—å—Å—è, –±—Ä–æ—Å–∞—Ç—å, –ø—Ä–µ–∫—Ä–∞—â–∞—Ç—å"
                                      "\nto finish ‚Äî –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—åto imagine ‚Äî –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å")
    bot.send_message(message.chat.id, "\n4. –†–µ—á—å –∏–¥–µ—Ç –æ –∑–∞–Ω—è—Ç–∏—è—Ö —Å–ø–æ—Ä—Ç–æ–º, —Ö–æ–±–±–∏ –∏–ª–∏ –∫–∞–∫–∏–º–∏-–ª–∏–±–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º–∏ –≤"
                                      " –≤—ã—Ä–∞–∂–µ–Ω–∏—è—Ö —Å –≥–ª–∞–≥–æ–ª–æ–º go:"
                                      "\nto go dancing ‚Äî —Ö–æ–¥–∏—Ç—å –Ω–∞ —Ç–∞–Ω—Ü—ã"
                                      "\nto go swimming ‚Äî —Ö–æ–¥–∏—Ç—å –Ω–∞ –ø–ª–∞–≤–∞–Ω–∏–µ"
                                      "\nto go fishing ‚Äî —Ö–æ–¥–∏—Ç—å –Ω–∞ —Ä—ã–±–∞–ª–∫—É"
                                      "\nto go skating ‚Äî —Ö–æ–¥–∏—Ç—å –∫–∞—Ç–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—å–∫–∞—Ö")
    bot.send_message(message.chat.id, "\n5. –ì–µ—Ä—É–Ω–¥–∏–π —É–ø–æ—Ç—Ä–µ–±–ª—è—é—Ç –ø–æ—Å–ª–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ to be + –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ + –ø—Ä–µ–¥–ª–æ–≥:"
                                      "\nto be afraid of smth ‚Äî –±–æ—è—Ç—å—Å—è —á–µ–≥–æ-–ª–∏–±–æ"
                                      "\nto be fond of smth ‚Äî –ª—é–±–∏—Ç—å —á—Ç–æ-–ª–∏–±–æ, —É–≤–ª–µ–∫–∞—Ç—å—Å—è —á–µ–º-–ª–∏–±–æ"
                                      "\nto be good/bad at smth ‚Äî —Ö–æ—Ä–æ—à–æ/–ø–ª–æ—Ö–æ —É–º–µ—Ç—å —á—Ç–æ-–ª–∏–±–æ, –±—ã—Ç—å —Å–ø–æ—Å–æ–±–Ω—ã–º/"
                                      "–Ω–µ—Å–ø–æ—Å–æ–±–Ω—ã–º –∫ —á–µ–º—É-–ª–∏–±–æ"
                                      "\nto be interested in smth ‚Äî –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞—Ç—å—Å—è —á–µ–º-–ª–∏–±–æ"
                                      "\nto be tired of smth ‚Äî —É—Å—Ç–∞–≤–∞—Ç—å –æ—Ç —á–µ–≥–æ-–ª–∏–±–æ")
    bot.send_message(message.chat.id, "\n6. –ü–æ—Å–ª–µ:"
                                      "\nto accuse of ‚Äî –æ–±–≤–∏–Ω—è—Ç—å –≤"
                                      "\nto blame for ‚Äî –≤–∏–Ω–∏—Ç—å –∑–∞"
                                      "\nto carry on ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å"
                                      "\nto complain of ‚Äî –∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞"
                                      "\nto congratulate on ‚Äî –ø–æ–∑–¥—Ä–∞–≤–ª—è—Ç—å —Å"
                                      "\nto depend on ‚Äî –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç"
                                      "\nto dream of ‚Äî –º–µ—á—Ç–∞—Ç—å –æ"
                                      "\nto hear of ‚Äî —Å–ª—ã—à–∞—Ç—å –æ"
                                      "\nto insist on ‚Äî –Ω–∞—Å—Ç–∞–∏–≤–∞—Ç—å –Ω–∞"
                                      "\nto keep from ‚Äî —É–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è –æ—Ç"
                                      "\nto look forward to ‚Äî –ø—Ä–µ–¥–≤–∫—É—à–∞—Ç—å, —Å –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º –∂–¥–∞—Ç—å"
                                      "\nto praise for ‚Äî —Ö–≤–∞–ª–∏—Ç—å –∑–∞"
                                      "\nto prevent from ‚Äî –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—Ç—å –æ—Ç"
                                      "\nto succeed in ‚Äî –ø—Ä–µ—É—Å–ø–µ–≤–∞—Ç—å –≤"
                                      "\nto suspect of ‚Äî –ø–æ–¥–æ–∑—Ä–µ–≤–∞—Ç—å –≤"
                                      "\nto take up ‚Äî –Ω–∞—á–∏–Ω–∞—Ç—å –¥–µ–ª–∞—Ç—å"
                                      "\nto thank for ‚Äî –±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å –∑–∞"
                                      "\nto think of ‚Äî –¥—É–º–∞—Ç—å –æ")
    bot.send_photo(message.chat.id, f2)
    bot.send_message(message.chat.id, "<i>(–í–∑—è—Ç–æ —á–∞—Å—Ç–∏—á–Ω–æ —Å englex.ru)</i>", parse_mode='html')


@bot.message_handler(func=lambda message: message.text == '–ù–æ–≤—ã–µ —Å–ª–æ–≤–∞')
def new_words(message):
    markup_reply = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    item_categ1 = types.KeyboardButton('–°–ª–æ–≤–∞')
    item_categ2 = types.KeyboardButton('–§—Ä–∞–∑—ã')
    ret_back = types.KeyboardButton(text='–ù–∞–∑–∞–¥ ‚Ü©')
    markup_reply.row(item_categ1, item_categ2)
    markup_reply.row(ret_back)
    bot.send_message(message.chat.id, '–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –º–æ–∂–Ω–æ –∏–∑—É—á–∞—Ç—å —Å–ª–æ–≤–∞ –∏–ª–∏ —Ñ—Ä–∞–∑—ã. '
                                      '\n–í—ã–±–∏—Ä–∞–π, –∏ <i><b>–∫–∞–∂–¥—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤</b></i> –±—É–¥–µ—à—å —É–∑–Ω–∞–≤–∞—Ç—å —á—Ç–æ-—Ç–æ '
                                      '<i><b>–Ω–æ–≤–æ–µ</b></i>.'
                                      '\n<b>–ù–µ –∑–∞–±—É–¥—å –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è!</b>',
                     reply_markup=markup_reply, parse_mode='html')


@bot.message_handler(func=lambda message: message.text == '–°–ª–æ–≤–∞')
def byt_words(message):
    bot.send_message(message.chat.id, random.choice(pred))
    bot.send_message(message.chat.id, random.choice(pred))
    for i in range(1000):
        time.sleep(60 * 60 * 5)
        bot.send_message(message.chat.id, random.choice(pred))


@bot.message_handler(func=lambda message: message.text == '–§—Ä–∞–∑—ã')
def phrases(message):
    f = open('if-you-want-food-you-ask-for-it-like-a-man.mp4', 'rb')
    f1 = open("no-i'll-be-out-in-a-minute.mp4", 'rb')
    f2 = open("calm-down-doctor-now-is-not-the-time-for-fear.mp4", 'rb')
    f3 = open("i'll-call-back-tomorrow.mp4", 'rb')
    f4 = open("if-this-man-should-fall-who-will-lift-the-flag-and-carry-on.mp4", 'rb')
    f5 = open("come-back-next-week.mp4", 'rb')
    f6 = open("i-need-you-to-come-over-as-soon-as-you-get-this-it's-important.mp4", 'rb')
    f7 = open("if-we-can-come-up-with-a-new-trick-change-the-name-of-the-act-the-name-stays.mp4", 'rb')
    f8 = open("find-out-who-he-is.mp4", 'rb')
    f9 = open("you-just-fill-in-the-details.mp4", 'rb')
    f10 = open("no-but-it-took-me-a-while-to-figure-out-why-i-felt-you-know-so-different.mp4", 'rb')
    f11 = open("don't-give-up-on-me-now-dean.mp4", 'rb')
    f12 = open("don't-give-in-to-hate.mp4", 'rb')
    f13 = open("you-never-could-get-along-with-anyone-in-school.mp4", 'rb')
    f14 = open("well-then-you-got-to-get-up-earlier-what's-that.mp4", 'rb')
    f15 = open("get-off-the-road.mp4", 'rb')
    f16 = open("kid-that's-the-wizard-get-on-it.mp4", 'rb')
    f17 = open("get-out-of-here.mp4", 'rb')
    f18 = open("we-just-gonna-get-through-this-somehow-okay.mp4", 'rb')
    f19 = open("it'll-be-okay-i-have-to-go-away.mp4", 'rb')
    f20 = open("go-ahead-sit-down.mp4", 'rb')
    f21 = open("go-on-take-it.mp4", 'rb')
    f22 = open("i-know-why-you're-afraid-to-go-out-at-night.mp4", 'rb')
    f23 = open("just-hang-on-a-minute.mp4", 'rb')
    f24 = open("i-always-learn-something-when-i-hang-out-with-the-elderly.mp4", 'rb')
    f25 = open("you-might-be-let-down.mp4", 'rb')
    f26 = open("i'm-going-to-look-after-you.mp4", 'rb')
    f27 = open("i'll-go-look-for-some-food-take-the-shotgun.mp4", 'rb')
    f28 = open("i-look-forward-to-our-partnership.mp4", 'rb')
    f29 = open("look-i-don't-have-anyone-eise-to-put-on-this-and-you-know-it.mp4", 'rb')
    video = [f, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22,
             f23, f24, f25, f26, f27, f28, f29]
    video_trscp = {
        f: '–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: If you want food, you <b>ask for it</b> like a man (–ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–∞ –µ–¥–∞, —Ç—ã –ø–æ–ø—Ä–æ—Å–∏—à—å –µ–µ –∫–∞–∫ '
           '–º—É–∂—á–∏–Ω–∞)',
        f1: "–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: No i'll <b>be out</b> in a minute (–ù–µ—Ç, —è –≤—ã–π–¥—É —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É)",
        f2: "–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: <b>Calm down</b> doctor now is not the time for fear (–£—Å–ø–æ–∫–æ–π—Ç–µ—Å—å, –¥–æ–∫—Ç–æ—Ä, —Å–µ–π—á–∞—Å –Ω–µ –≤—Ä–µ–º—è "
            "–¥–ª—è —Å—Ç—Ä–∞—Ö–∞)",
        f3: "–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: I'll <b>call back</b> tomorrow (–Ø –ø–æ–∑–≤–æ–Ω—é –∑–∞–≤—Ç—Ä–∞)",
        f4: '–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: If this man should fall, who will lift the flag and <b>carry on</b>? (–ï—Å–ª–∏ —ç—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ '
            '–ø–∞–¥–µ—Ç, –∫—Ç–æ –ø–æ–¥–Ω–∏–º–µ—Ç —Ñ–ª–∞–≥ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç?)',
        f5: '–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: <b>Come back</b> next week (–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–µ)',
        f6: "–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: I need you to <b>come over</b> as soon as you get this, it's important (–ú–Ω–µ –Ω—É–∂–Ω–æ, "
            "—á—Ç–æ–±—ã —Ç—ã –ø—Ä–∏—à–µ–ª, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ–ª—É—á–∏—à—å —ç—Ç–æ, —ç—Ç–æ –≤–∞–∂–Ω–æ)",
        f7: '–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: If we can <b>come up</b> with a new trick, change the name of the act (–ï—Å–ª–∏ –º—ã —Å–º–æ–∂–µ–º '
            '–ø—Ä–∏–¥—É–º–∞—Ç—å –Ω–æ–≤—ã–π —Ç—Ä—é–∫, –∏–∑–º–µ–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞)',
        f8: '–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: <b>Find out</b> who he is (–í—ã—è—Å–Ω–∏, –∫—Ç–æ –æ–Ω —Ç–∞–∫–æ–π)',
        f9: '–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: You just <b>fill in</b> the details (–ü—Ä–æ—Å—Ç–æ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–µ—Ç–∞–ª–∏)',
        f10: '–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: No, but it took me a while to <b>figure out</b> why i felt, you know, so different (–ù–µ—Ç, '
             '–Ω–æ –º–Ω–µ –ø–æ—Ç—Ä–µ–±–æ–≤–∞–ª–æ—Å—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –ø–æ—á–µ–º—É —è —á—É–≤—Å—Ç–≤–æ–≤–∞–ª —Å–µ–±—è, –∑–Ω–∞–µ—à—å –ª–∏, —Ç–∞–∫–∏–º –¥—Ä—É–≥–∏–º)',
        f11: "–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: Don't <b>give up</b> on me now, Dean (–ù–µ –æ—Ç–∫–∞–∑—ã–≤–∞–π—Å—è –æ—Ç –º–µ–Ω—è —Å–µ–π—á–∞—Å, –î–∏–Ω)",
        f12: "–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: Don't <b>give in</b> to hate (–ù–µ –ø–æ–∑–≤–æ–ª—å –≥–Ω–µ–≤—É –æ–≤–ª–∞–¥–µ—Ç—å —Ç–æ–±–æ–π)",
        f13: '–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: You never could <b>get along</b> with anyone in school (–£ —Ç–µ–±—è –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–ª—É—á–∞–ª–æ—Å—å '
             '–ø–æ–ª–∞–¥–∏—Ç—å —Å –∫–µ–º-—Ç–æ –≤ —à–∫–æ–ª–µ)',
        f14: "–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: Well then you got to <b>get up</b> earlier. What's that? (–ß—Ç–æ –∂, —Ç–æ–≥–¥–∞ —Ç–µ–±–µ –ø—Ä–∏–¥–µ—Ç—Å—è "
             "–≤—Å—Ç–∞–≤–∞—Ç—å "
             "–ø–æ—Ä–∞–Ω—å—à–µ. –ß—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ?)",
        f15: '–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: <b>Get off</b> the road! (–£–±–∏—Ä–∞–π—Å—è —Å –¥–æ—Ä–æ–≥–∏!)',
        f16: "–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: Kid, that's the wizard. <b>Get on</b> it (–ú–∞–ª—ã—à, —ç—Ç–æ –≤–æ–ª—à–µ–±–Ω–∏–∫. –ó–∞–π–º–∏—Å—å –∏–º)",
        f17: '–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: <b>Get out of</b> here! (–ü—Ä–æ–≤–∞–ª–∏–≤–∞–π –æ—Ç—Å—é–¥–∞!)',
        f18: '–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: We just gonna <b>get through</b> this somehow. Okay? (–ú—ã –∫–∞–∫-–Ω–∏–±—É–¥—å —Å–ø—Ä–∞–≤–∏–º—Å—è —Å —ç—Ç–∏–º. '
             '–õ–∞–¥–Ω–æ?)',
        f19: "–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: It'll be okay. I have to <b>go away</b> (–í—Å—ë –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ. –ú–Ω–µ –Ω—É–∂–Ω–æ —É–π—Ç–∏)",
        f20: '–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: <b>Go ahead</b>, sit down (–î–∞–≤–∞–π, —Å–∞–¥–∏—Å—å)',
        f21: '–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: <b>Go on</b>, take it (–î–∞–≤–∞–π, –≤–æ–∑—å–º–∏ —ç—Ç–æ)',
        f22: "–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: I know why you're afraid to <b>go out</b> at night (–Ø –∑–Ω–∞—é, –ø–æ—á–µ–º—É —Ç—ã –±–æ–∏—à—å—Å—è –≤—ã—Ö–æ–¥–∏—Ç—å –ø–æ "
             "–Ω–æ—á–∞–º)",
        f23: '–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: Just <b>hang on</b> a minute (–ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç—É)',
        f24: '–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: I always learn something when i <b>hang out</b> with the elderly (–Ø –≤—Å–µ–≥–¥–∞ —É–∑–Ω–∞—é –Ω–æ–≤–æ–µ, '
             '–∫–æ–≥–¥–∞ —Ç—É—Å—É—é—Å—å —Å–æ —Å—Ç–∞—Ä–∏–∫–∞–º–∏)',
        f25: '–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: You might be <b>let down</b> (–î–æ–ª–∂–Ω–æ –±—ã—Ç—å, —Ç—ã —Ä–∞—Å—Å—Ç—Ä–æ–µ–Ω)',
        f26: "–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: I'm going to <b>look after</b> you (–Ø –±—É–¥—É –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Ç–µ–±–µ)",
        f27: "–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: I'll go <b>look for</b> some food. Take the shotgun (–Ø –ø–æ–π–¥—É –ø–æ–∏—â—É –µ–¥—ã. –í–æ–∑—å–º–∏ –æ—Ä—É–∂–∏–µ)",
        f28: '–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: I <b>look forward to</b> our patnership (–Ø —Å –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º –∂–¥—É –Ω–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞)',
        f29: "–¢–µ–∫—Å—Ç –≤–∏–¥–µ–æ: Look, i don't have anyone else to <b>put on</b> this and you know it (–ü–æ—Å–ª—É—à–∞–π, –º–Ω–µ –±–æ–ª—å—à–µ "
             "–Ω–µ–∫–æ–≥–æ –≤—Ç—è–Ω—É—Ç—å –≤ —ç—Ç–æ, –∏ —Ç—ã —ç—Ç–æ –∑–Ω–∞–µ—à—å)"}
    phrases_dict = {f: '<b>ask for</b> ‚Äì –ø—Ä–æ—Å–∏—Ç—å, —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å, —Ç—Ä–µ–±–æ–≤–∞—Ç—å',
                    f1: '<b>be out</b> ‚Äì –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å (–Ω–µ –±—ã—Ç—å –¥–æ–º–∞, –Ω–∞ –º–µ—Å—Ç–µ)',
                    f2: '<b>calm down</b> ‚Äì —É—Å–ø–æ–∫–æ–∏—Ç—å—Å—è',
                    f3: '<b>call back</b> ‚Äî –ø–µ—Ä–µ–∑–≤–∞–Ω–∏–≤–∞—Ç—å',
                    f4: '<b>carry on</b> ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —á—Ç–æ-—Ç–æ –¥–µ–ª–∞—Ç—å',
                    f5: '<b>come back</b> ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è',
                    f6: '<b>come over</b> ‚Äì –ø—Ä–∏–π—Ç–∏, –∑–∞–π—Ç–∏ –∫ –∫–æ–º—É-—Ç–æ (–æ–±—ã—á–Ω–æ –¥–æ–º–æ–π).',
                    f7: '<b>come up with</b> ‚Äî –ø—Ä–∏–¥—É–º–∞—Ç—å —á—Ç–æ-—Ç–æ, –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —á—Ç–æ-—Ç–æ',
                    f8: '<b>find out</b> ‚Äî —É–∑–Ω–∞–≤–∞—Ç—å —á—Ç–æ-—Ç–æ',
                    f9: '<b>fill in</b> ‚Äì –∑–∞–ø–æ–ª–Ω—è—Ç—å (—Ñ–æ—Ä–º—É, –∞–Ω–∫–µ—Ç—É, –±–ª–∞–Ω–∫)',
                    f10: '<b>figure out</b> ‚Äì –ø–æ–Ω—è—Ç—å, –≤—ã—è—Å–Ω–∏—Ç—å, –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –∏–ª–∏ —Ä–µ—à–µ–Ω–∏–µ',
                    f11: '<b>give up</b> ‚Äì —Å–¥–∞–≤–∞—Ç—å—Å—è (–ø–∞–¥–∞—Ç—å –¥—É—Ö–æ–º)',
                    f12: '<b>give in</b> ‚Äì —É—Å—Ç—É–ø–∞—Ç—å, —Å–¥–∞—Ç—å—Å—è, –ø—Ä–∏–∑–Ω–∞–≤–∞—Ç—å',
                    f13: '<b>get along</b> ‚Äì –ª–∞–¥–∏—Ç—å, –±—ã—Ç—å –≤ —Ö–æ—Ä–æ—à–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö',
                    f14: '<b>get up</b> ‚Äì –≤—Å—Ç–∞–≤–∞—Ç—å',
                    f15: '<b>get off</b> ‚Äì —Å–æ–π—Ç–∏, –≤—ã–π—Ç–∏ –∏–∑ (–æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∏ –¥—Ä—É–≥–æ–µ)',
                    f16: '<b>get on</b> ‚Äì –≤–æ–π—Ç–∏, —Å–µ—Å—Ç—å –Ω–∞ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
                    f17: '<b>get out of</b> ‚Äì –≤—ã–π—Ç–∏ –∏–∑, –≤—ã–±—Ä–∞—Ç—å—Å—è',
                    f18: '<b>get through</b> ‚Äì –≤—ã–∂–∏—Ç—å, –ø—Ä–æ–π—Ç–∏ —á–µ—Ä–µ–∑ —á—Ç–æ-—Ç–æ',
                    f19: '<b>go away</b> ‚Äì —É—Ö–æ–¥–∏—Ç—å, —É–µ–∑–∂–∞—Ç—å',
                    f20: '<b>go ahead</b>‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å, –Ω–∞—á–∏–Ω–∞—Ç—å, –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é ‚Äì ¬´–¥–∞–≤–∞–π, –≤–ø–µ—Ä–µ–¥¬ª',
                    f21: '<b>go on</b>‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å, –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é',
                    f22: '<b>go out</b>‚Äî –≤—ã–π—Ç–∏ –≤ –æ–±—â–µ—Å—Ç–≤–æ, –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è –≤–Ω–µ –¥–æ–º–∞, –ø–æ–π—Ç–∏ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç—å—Å—è',
                    f23: '<b>hang on</b>‚Äî –ø–æ–¥–æ–∂–¥–∞—Ç—å',
                    f24: '<b>hang out</b>‚Äî —Ç—É—Å–æ–≤–∞—Ç—å—Å—è, –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è, ¬´–∑–∞–≤–∏—Å–∞—Ç—å¬ª –≥–¥–µ-—Ç–æ/—Å –∫–µ–º-—Ç–æ',
                    f25: '<b>let down</b>‚Äî —Ä–∞—Å—Å—Ç—Ä–æ–∏—Ç—å, —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞—Ç—å –∫–æ–≥–æ-—Ç–æ',
                    f26: '<b>look after</b> ‚Äî –ø—Ä–∏—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∑–∞ —á–µ–º-—Ç–æ/–∫–µ–º-—Ç–æ',
                    f27: '<b>look for</b> ‚Äî –∏—Å–∫–∞—Ç—å —á—Ç–æ-—Ç–æ/–∫–æ–≥–æ-—Ç–æ',
                    f28: '<b>look forward to</b> ‚Äî –∂–¥–∞—Ç—å —á–µ–≥–æ-–ª–∏–±–æ —Å –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º',
                    f29: '<b>put on</b> ‚Äî –Ω–∞–¥–µ—Ç—å —á—Ç–æ-–ª–∏–±–æ, –≤—Ç—è–Ω—É—Ç—å –≤–æ —á—Ç–æ-—Ç–æ'}
    a = random.choice(video)
    bot.send_message(message.chat.id, phrases_dict[a], parse_mode='html')
    bot.send_video(message.chat.id, a)
    bot.send_message(message.chat.id, video_trscp[a], parse_mode='html')
    for i in range(1000):
        time.sleep(60*60*5)
        a = random.choice(video)
        bot.send_message(message.chat.id, phrases_dict[a], parse_mode='html')
        bot.send_video(message.chat.id, a)
        bot.send_message(message.chat.id, video_trscp[a], parse_mode='html')


bot.polling(none_stop=True, interval=0)
